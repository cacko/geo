# https://taskfile.dev

version: "3"

vars:
  PROJECT: geo

tasks:
  stop:
    desc: stop the server
    cmds:
      - ssh $REMOTE_HOST 'source ~/.zshrc;systemctl --user stop {{.PROJECT}}'

  restart:
    desc: restart the service
    cmds:
      - ssh $REMOTE_HOST 'source ~/.zshrc;systemctl --user restart {{.PROJECT}}'

  push:
    desc: commit and pushes current changes
    cmds:
      - git add .  || true
      - git commit -am "$(curl -s https://commit.cacko.net/index.txt)" || true
      - git push  || true

  pull:
    desc: pulls from git
    cmds:
      - ssh $REMOTE_HOST 'source ~/.zshrc;cd /var/www/{{.PROJECT}};git reset --hard;git pull'

  pp:
    desc: push and pull
    cmds:
      - task: push
      - task: pull

  logs:
    desc: monitor logs
    cmds:
      - ssh $REMOTE_HOST 'source ~/.zshrc;journalctl --user -u {{.PROJECT}} -f' | ccze -A

  systemd-exec:
    desc: systemd exec
    cmds:
      - direnv exec . mamba run --live-stream -n {{.PROJECT}} python -m app

  export:
    desc: export env
    cmds:
      - mamba env export --no-builds --ignore-channels  -n {{.PROJECT}} > environment.yml

  install:
    desc: calls poetry install and npm ci
    cmds:
      - ssh $REMOTE_HOST 'source ~/.zshrc;cd /var/www/{{.PROJECT}}; mamba env update -n {{.PROJECT}} -f environment.yml --prune'

  update:
    desc: update package
    cmds:
      - mamba run --live-stream -n {{.PROJECT}} pip install {{.CLI_ARGS}} -U
      - task: export
      - sed -i '' -e '/libcxx/d' environment.yml
      - task: pp
      - task: install
      - task: deploy

  web-deploy:
    desc: deploy
    dir: web
    cmds:
      - ng build --configuration production --service-worker
      - tar cfz dist.tgz dist/geo
      - scp dist.tgz open:/var/www/geo
      - ssh open rm -rf /var/www/geo/dist
      - ssh open tar zxf /var/www/geo/dist.tgz --directory /var/www/geo
      - ssh open rm /var/www/geo/dist.tgz

  deploy:
    desc: all
    cmds:
      - task: pp
      - task: install
      - task: restart

  cli:
    desc: run flask geo locally
    cmds:
      - mamba run --live-stream -n {{.PROJECT}} flask {{.CLI_ARGS}}

  redis:
    desc: open redis-cli
    cmds:
      - keydb-cli $REDIS_CLI
